% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization_methods.R
\name{optimize_design_twostage}
\alias{optimize_design_twostage}
\title{Calculate optimal design parameters for a two-stage gold-standard design}
\usage{
optimize_design_twostage(
  cT2 = NULL,
  cP1 = NULL,
  cP2 = NULL,
  cC1 = NULL,
  cC2 = NULL,
  bTP1f = NULL,
  bTP1e = NULL,
  bTC1f = NULL,
  bTC1e = NULL,
  alpha = 0.025,
  beta = 0.2,
  alternative_TP = 0.4,
  alternative_TC = 0,
  Delta = 0.2,
  varT = 1,
  varP = 1,
  varC = 1,
  binding_futility = FALSE,
  always_both_futility_tests = TRUE,
  round_n = TRUE,
  lambda = 1,
  kappa = 0,
  nu = 0,
  objective = quote(sqrt(lambda)^2 * ASN[["H11"]] + (1 - sqrt(lambda)) * sqrt(lambda) *
    ASN[["H10"]] + (1 - sqrt(lambda)) * sqrt(lambda) * ASN[["H01"]] + (1 -
    sqrt(lambda))^2 * ASN[["H00"]] + kappa * (sqrt(lambda)^2 * ASNP[["H11"]] + (1 -
    sqrt(lambda)) * sqrt(lambda) * ASNP[["H10"]] + (1 - sqrt(lambda)) * sqrt(lambda) *
    ASNP[["H01"]] + (1 - sqrt(lambda))^2 * ASNP[["H00"]] + nu * cumn[[2]][["P"]]) + nu *
    (cumn[[2]][["T"]] + cumn[[2]][["P"]] + cumn[[2]][["C"]])),
  inner_tol_objective = 1e-05,
  mvnorm_algorithm = mvtnorm::Miwa(steps = 128, checkCorr = FALSE, maxval = 1000),
  nloptr_x0 = NULL,
  nloptr_lb = NULL,
  nloptr_ub = NULL,
  nloptr_opts = list(algorithm = "NLOPT_LN_SBPLX", ftol_rel = 1e-04, xtol_abs = 0.001,
    xtol_rel = 0.01, maxeval = 1000, print_level = 0),
  print_progress = TRUE,
  ...
)
}
\arguments{
\item{cT2}{(numeric) allocation ratio nT2 / nT1. Parameter to be optimized if left unspecified.}

\item{cP1}{(numeric) allocation ratio nP1 / nT1. Parameter to be optimized if left unspecified.}

\item{cP2}{(numeric) allocation ratio nP2 / nT1. Parameter to be optimized if left unspecified.}

\item{cC1}{(numeric) allocation ratio nC1 / nT1. Parameter to be optimized if left unspecified.}

\item{cC2}{(numeric) allocation ratio nC2 / nT1. Parameter to be optimized if left unspecified.}

\item{bTP1f}{(numeric) first stage futility boundary for the T vs. P testing problem. Parameter to be optimized if left unspecified.}

\item{bTP1e}{(numeric) first stage critical value for the T vs. P testing problem. Parameter to be optimized if left unspecified.}

\item{bTC1f}{(numeric) first stage futility boundary for the T vs. C testing problem. Parameter to be optimized if left unspecified.}

\item{bTC1e}{(numeric) first stage critical value for the T vs. C testing problem. Parameter to be optimized if left unspecified.}

\item{alpha}{type I error rate.}

\item{beta}{type II error rate.}

\item{alternative_TP}{assumed difference between T and P under H1. Positive values favor T.}

\item{alternative_TC}{assumed difference between T and C under H1. Positive values favor T.}

\item{Delta}{non-inferiority margin for the test \eqn{X_T - X_C \leq - \Delta} vs.
\eqn{X_T - X_C > - \Delta}.}

\item{varT}{variance of treatment group.}

\item{varP}{variance of placebo group.}

\item{varC}{variance of control group.}

\item{binding_futility}{(logical) controls if futility boundaries are binding.}

\item{always_both_futility_tests}{(logical) if true, both futility tests are performed after the first stage. If false,
a 'completely sequential' testing procedure is employed (see Appendix of paper).}

\item{round_n}{(logical) if TRUE, a design with integer valued sample sizes is returned.}

\item{lambda}{(numeric) weight of the alternative hypothesis in the default objective function. 1-lambda is the weight
of the null hypothesis.}

\item{kappa}{(numeric) penalty factor for placebo patients in the default objective function.}

\item{nu}{(numeric) penalty factor for the maximum sample size in the default objective function.}

\item{objective}{(expression) objective criterion.}

\item{inner_tol_objective}{(numeric) used to determine the tolerances for integrals and nuisance optimization problems
inside the objective function.}

\item{mvnorm_algorithm}{algorithm for multivariate integration passed to \code{\link[mvtnorm]{pmvnorm}}.}

\item{nloptr_x0}{(numeric vector) starting point for optimization.}

\item{nloptr_lb}{(numeric vector) lower bound box for box constrained optimization.}

\item{nloptr_ub}{(numeric vector) upper bound box for box constrained optimization.}

\item{nloptr_opts}{(list) nloptr options. See \code{\link[nloptr]{nloptr}}.}

\item{print_progress}{(logical) controls whether optimization progress should be visualized during the calculation.}

\item{...}{additional arguments passed along.}
}
\value{
Design object (a list) with optimized design parameters.
}
\description{
Calculate optimal design parameters for a two-stage gold-standard design
}
\details{
This function calculates optimal design parameters for a two-stage three-arm gold-standard
non-inferiority trial. The design assumes a hierarchical testing procedure is applied.
The first test aims to establish assay sensitivity of a trial. It is a test of 
superiority of the experimental treatment (T) against the placebo treatment (P).
If assay sensitivity is successfully established, the treatment is tested for non-inferiority
to the control treatment (C).

Individual observations are assumed to be normally distributed, where higher values
correspond to better treatment effects. We denote the test statistics for the
two hypothesis by Z_TP1 and Z_TC1, where Z_TC1 already incorporates
the non-inferiority margin \eqn{\Delta}. The respective critical values are given by
bTP1e, bTC1e, bTP2e and bTC2e. (The optimizer searches for the optimal values of bTP1e and
bTC1e, while bTP2e and bTC2e are implicitly defined.)

The parameters being optimized are ...

The design is optimized with respect to ...
}
\examples{
D <- optimize_design_twostage(nloptr_opts = list(maxeval = 1, algorithm = "NLOPT_LN_SBPLX"))
}
